Vilka ansvarsområden har era klasser?
-Car: definerar betende av bilar
-Volvo, Saab, Scania: implementerar specifika methoder för car
-Truck: definerar metoder för lastbilar
-Bilverkstad: definerar hur en bilverkstad ska bete sig -> lägga in ett visst antal Bilar av en visst slags bil
-CarController: hantar logiken av simuleringen -> start/stop engine, bilverkstad collision
-CarView: hanterar GUI & user interface
-DrawPanel: ritar bilarna

Vilka anledningar har de att förändras?
-Car+Subklasser: om man vill ändra på betendet av bilarna eller deras implementation
-Bilverkstad: om man vill ändra hur och vilka bilar man vill lägga till Bilverkstan
-CarController: om man vill ändra simulerins logiken eller hur Bilverkstan kolliderar med bilarna
-CarView: om man vill ändra på designen av knapparna ellerlägga till några
-DrawPanel: om man vill ändra på hur bilarna blir ritade

På vilka klasser skulle ni behöva tillämpa dekomposition för att bättre följa SoC och SRP?
-CarController: hanterar både simulations logic (hur bilarna rör sig, workshop collision) & ui interactioner (event handling) det ska uppdelas i tvo klasser.
-CarView: kann bli uppdelat i tvo klasser. en som hanterar buttons & en som hanterar events som till exempel button clicks
-Drawpanel: det är kanske bara minimalt nödvändigt men man kann uppdela denna klass i tvo klasser. en som hanterar rendering av bilarna och en som hanterar rendering av workshop.

